- preset = lookup_exercies(@exercise.preset)

.fancy_header
  /= link_to "/app/oefeningen/#{@token}", :class => "back_btn" do
  /  .arrow_left
  = preset[current_user.language]["naam"]
.gradient-edge

.oefening
  / %pre= @exercise.to_yaml
  / %pre= preset.to_yaml
  - if @exercise.material == "tekst" || @exercise.material == "text" || @exercise.material == "tekstvolume"
    .paper

      .oefening_tekst
        = preset[current_user.language]["content"].html_safe

      .progress_bar
        %progress#progress_bar{:value=>"32", :max=>"100", :width=>"100%"} 32%

      %br      
      %button#end_text_now.hidden end this now
      #play-button.far.fa-lg.fa-play
      #end-container

  - elsif @exercise.material == "textvolume" || @exercise.material == "tekstvolume"
    .paper

      .oefening_tekst
        = preset[current_user.language]["content"].html_safe

      .progress_bar
        %progress#progress_bar{:value=>"32", :max=>"100", :width=>"100%"} 32%

      %br

      %button#start_it_all start
      %button#meter start NU
      #in_numbers  0


      %button#end_text_now.hidden end this now
      #play-button.far.fa-lg.fa-play
      #end-container


  - elsif @exercise.material == "audio"
    .audio_container
      %br
      %br
      %br

      %center
        #play-button.far.fa-lg.fa-play-circle{:style=>"font-size:48px;"}
        #pause-button.fas.fa-lg.fa-volume-up{:style=>"font-size:48px;"}
      %br
      %br
      %br
      %br
        .progress_bar
          %progress#progress_bar{:value=>"32", :max=>"100", :width=>"100%"} 32%
      %br
      %br
      %br

      %audio{:src=>preset[current_user.language]["content"], 'webkit-playsinline': "true", :playsinline=> "true", :controls => false, :id=>"audio_oefening"}
      %button#end_audio_now.hidden end audio now
      #end-container

  - else
    .video-container
      %video{:src=>preset[current_user.language]["content"], 'webkit-playsinline': "true", :autoplay => true, :playsinline=> true, :controls => false, :id=>"video_oefening"}
      #play-button.far.fa-lg.fa-play-circle
      #end-container
    
      %button#skip_intro.hidden skip intro

    %button#end_video_now.hidden end this now

  %h4{:style=>"text-align:center;"}= preset[current_user.language]["doel"] unless preset[current_user.language]["doel"] == "-"
  .push-down

:javascript
  vid = null
  if ("#{@exercise.material}" == "video") {
    // Voor Video
    var vid = document.getElementById('video_oefening')

    vid.addEventListener('canplay', (event) => {
      //alert("can play!")
      console.log('Video can start, but not sure it will play through.');
      vid.play()
    });

    vid.onclick = function() {
      if ( vid.paused ) {
        vid.play()
      } else {
        vid.pause()
      }
    }

    vid.onplay = function() {
      document.getElementById('play-button').style.display = "none"
      // document.getElementById('skip_intro').classList.remove('hidden')  
      console.log("checkem")
      console.log("#{preset['skip_intro']}")
      console.log(!isNaN( "#{preset['skip_intro']}"))
      console.log(document.getElementById('skip_intro'))
      if ( "#{preset['skip_intro']}" != '' && !isNaN( "#{preset['skip_intro']}") && document.getElementById('skip_intro') ) {                
         document.getElementById('skip_intro').classList.remove('hidden')  
      }
    }

    vid.onloadedmetadata = function(e) {
      console.log("== VIDEO got metatada", vid.duration, e)
      document.getElementById('end_video_now').onclick = function(e) {
        vid.currentTime = vid.duration - 0.3
      }

      console.log( "#{preset['skip_intro']}" != '' )
      console.log( !isNaN( "#{preset['skip_intro']}") )
      console.log( document.getElementById('skip_intro') )

      if ( "#{preset['skip_intro']}" != '' && !isNaN( "#{preset['skip_intro']}") && document.getElementById('skip_intro') ) {        
        document.getElementById('skip_intro').onclick = function(e) {
          vid.currentTime = parseFloat("#{preset['skip_intro']}")
          document.getElementById('skip_intro').classList.add('hidden')
          vid.play()
        }
       
      }
      vid.play()
    }

    vid.onended = function(e) {
      endExercize(e)
    }
  }

  if ("#{@exercise.material}" == "audio") {
    console.log("had audio, dont know what to do")
    var aud = document.getElementById('audio_oefening')

    document.getElementById('pause-button').style.display = "none"
    document.getElementById('play-button').onclick = function() {
      aud.play()
      document.getElementById('pause-button').style.display = "block"
      document.getElementById('play-button').style.display = "none"
    }

    aud.onended = function(e) {

      document.querySelectorAll(".audio_container")[0].style.opacity= 0.2
      document.querySelectorAll(".audio_container")[0].style.filter = "blur(3px)"
      document.body.appendChild( document.getElementById('end-container') )
      endExercize(e)
    }
    try {clearInterval(updateInterval)}catch(e){}
    updateInterval = setInterval( function() {
      // update
      var progress_bar = document.getElementById('progress_bar')
      try {
        progress_bar.value = (aud.currentTime / aud.duration)*100
      } catch(e) {
        clearInterval(updateInterval)
        return
      }
    }, 100 )

      document.getElementById('end_audio_now').onclick = function(e) {
        aud.currentTime = aud.duration - 1
      }
  }

  if ("#{@exercise.material}" == "tekst" || "#{@exercise.material}" == "tekstvolume") {
    // Voor Text
    var duration = 60
    var n = 0
    try {clearInterval(updateInterval)}catch(e){}
    updateInterval = setInterval( function() {
      // update
      var progress_bar = document.getElementById('progress_bar')
      n += 0.1
      try {
        progress_bar.value = n * 1.6666
      } catch(e) {
        clearInterval(updateInterval)
        return
      }

      if ( n > duration ) {
        clearInterval(updateInterval)

        document.querySelectorAll(".paper")[0].style.opacity= 0.2
        document.querySelectorAll(".paper")[0].style.filter = "blur(3px)"
        // document.querySelectorAll(".paper")[0].style.opacity= 0.2
        // document.querySelectorAll(".paper")[0].style.filter = "blur(3px)"
        document.body.appendChild( document.getElementById('end-container') )
        document.getElementById('end-container').style.top = "14%"
        endExercize()
      }
    }, 100 )

    // test
    document.getElementById('end_text_now').onclick = function(e) {
      document.querySelectorAll(".paper")[0].style.opacity= 0.2
      document.querySelectorAll(".paper")[0].style.filter = "blur(3px)"
      document.body.appendChild( document.getElementById('end-container') )
      endExercize()
    }
  }

  if ("#{@exercise.material}" == "textvolume_disabled") {
  	// Decibel Meter

    document.getElementById("start_it_all").onclick = function() {
      var script = document.createElement("script");
      script.addEventListener('load', function() {
        start_it_all()
      }, false)

      script.src = "https://app.voicebuddy.nl/javascript/decibel_meter.js";
      document.head.appendChild(script);
    }

    function start_it_all() {
      console.log("creating meter ...")
      var meterEl = document.getElementById('meter');
      //var levelEl = document.querySelector('#meter > span');

    	var meter = DecibelMeter.create('meter');

    	// listen for audio sources to be ready

    	meter.on('ready', function (meter, sources) {
    		var mic = sources[0]; // select first mic
    		meter.connect(mic); // connect to mic
    	});

    	// adjust displayed level when audio sampled

    	meter.on('sample', function (dB, percent, level) {
    		// levelEl.style.height = (percent * 100) + '%';

        document.getElementById('meter_bar').value = (percent * 100)
        document.getElementById('in_numbers').innerHTML = "dB: " + dB + ", percent: " + percent + " level: " + level

    	});

    	// change element class when meter starts listening

    	meter.on('listen', function (meter) {
    		meterEl.classList.add('active');
    	});

    	// change element class when meter stops listening

    	meter.on('stop-listening', function (meter) {
    		meterEl.classList.remove('active');
    		levelEl.style.height = 0;
    	});

    	// clicking the meter element will toggle listening

    	meterEl.addEventListener('click', function (e) {
        console.log("clcierdedl")
    		if (meter.listening) {
    			meter.stopListening();
          console.log("Stop!")
    		}else{
    			meter.listen();
          console.log("Start!")
    	  };
      })
    }
  } // end startitall

  var setReminder = function() {

      document.getElementById('icon_none').classList.add('hidden')
      document.getElementById('icon_check').classList.remove('hidden')

    // send message
    var datetimestring = document.getElementById('setReminderDate').value + ":00" // we need to add seconds ourselves
    var sent = "SET_REMINDER||WEB||" + datetimestring + "||VoiceBuddy reminder||Vergeet niet om #{preset[current_user.language]['naam']} te oefenen vandaag!"
    console.log(sent)
    window.parent.postMessage(sent , "*")
  }


  // voor alles
  function endExercize(e) {
    console.log("== Excercize on Ended")
    // post to the api that the client has completed a run
    // @exercise
    // https://app.voicebuddy.nl/app/update_exercise/606cbdfea19ea6812d2be46c
    fetch("/app/update_exercise/#{@exercise.id}/#{@token}")
    .then( function(resp) {
      console.log("response:", resp)

      if (resp.status != 200) {
        console.log("WARNING 200 status not detected")
      }

      if (resp.status == 404) {
        console.log("ERROR 404 detected")
      }

    }).then( function(data) {
      console.log("got data", data)
      var results_location = document.getElementById("end-container")
      results_location.style.display = "block"
      results_location.style.opacity = "block"
      results_location.innerHTML = `#{render 'app/win_screen'}`

      //results_location.innerHTML = ""
      // video
      if (vid != null) {
        vid.style.webkitFilter = "blur(10px)"
        vid.style.filter = "blur(7px)"
        vid.style.opacity = "0.63"
        }
      //vid.src = ""

      // add button
      document.getElementById('set_reminder').onclick = setReminder

      // text
    }).catch( function(error) {
      console.log("something went wrong!", error)
    })
  }
